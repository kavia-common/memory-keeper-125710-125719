{"is_source_file": true, "format": "Dart", "description": "This Dart source file defines the WalletRepository class, which provides CRUD operations, querying, and aggregation functionalities for wallet entries in a Flutter application using SQLite via the sqflite package.", "external_files": ["package:sqflite/sqflite.dart", "../../models/wallet_entry.dart", "../db/app_database.dart"], "external_methods": ["AppDatabase.instance.database", "WalletEntry.toDbMap", "WalletEntry.fromDbMap", "WalletType.toDbValue()"], "published": ["WalletRepository"], "classes": [{"name": "WalletRepository", "description": "Repository class to perform CRUD, list, update, delete, and aggregate operations on wallet entries stored in the database."}], "methods": [{"name": "create", "description": "Inserts a new WalletEntry into the database, returns the generated ID."}, {"name": "getById", "description": "Fetches a WalletEntry by its ID, or returns null if not found."}, {"name": "list", "description": "Retrieves a list of WalletEntry objects with optional filters like date range, category, type, pagination, and sorting."}, {"name": "update", "description": "Updates an existing WalletEntry in the database; requires the entry to have a non-null ID."}, {"name": "delete", "description": "Deletes a WalletEntry by its ID."}, {"name": "totals", "description": "Calculates total income, expense, and balance within an optional date range."}], "calls": ["AppDatabase.instance.database", "db.insert", "db.query", "db.update", "db.delete", "db.rawQuery", "WalletEntry.fromDbMap", "WalletEntry.toDbMap", "WalletType.toDbValue()"], "search-terms": ["WalletRepository", "CRUD", "WalletEntry", "database query", "aggregation", "income expense balance"], "state": 2, "file_id": 25, "knowledge_revision": 53, "git_revision": "", "hash": "872a06895c9d0343c8af8c387bf2eaf8", "format-version": 4, "code-base-name": "flutter_frontend", "filename": "flutter_frontend/lib/data/repositories/wallet_repository.dart", "revision_history": [{"53": ""}]}